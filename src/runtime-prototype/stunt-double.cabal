cabal-version:      2.2
name:               stunt-double
version:            0.0.0
synopsis:           Actors that can be faked.
description:
  See README at <https://github.com/symbiont-io/detsys-testkit/tree/main/src/runtime-prototype#readme>

bug-reports:        https://github.com/symbiont-io/detsys-testkit/issues
license:
license-file:       LICENSE
author:             Stevan Andjelkovic, Daniel Gustafsson
maintainer:         symbiont-stevan-andjelkovic@users.noreply.github.com
copyright:          Copyright (c) 2021 Symbiont Inc
category:           Testing, Distributed Systems
build-type:         Simple
extra-source-files: CHANGELOG.md
tested-with:        GHC ==8.10.4

library
  hs-source-dirs:   src/
  exposed-modules:
    Debugger
    Disruptor
    Disruptor.AtomicCounterPadded
    Disruptor.MP
    Disruptor.MP.Consumer
    Disruptor.MP.Producer
    Disruptor.MP.RingBuffer
    Disruptor.SequenceNumber
    Disruptor.SP
    Disruptor.SP.Consumer
    Disruptor.SP.Producer
    Disruptor.SP.RingBuffer
    Disruptor.SP.Unboxed.Consumer
    Disruptor.SP.Unboxed.Producer
    Disruptor.SP.Unboxed.RingBuffer
    Scheduler
    Scheduler.Agenda
    Scheduler.Event
    Scheduler.Executor
    Scheduler.Fault
    Scheduler.Faults
    Scheduler.Main
    Scheduler.State
    StuntDouble
    StuntDouble.ActorMap
    StuntDouble.AdminTransport
    StuntDouble.AdminTransport.NamedPipe
    StuntDouble.Codec
    StuntDouble.Envelope
    StuntDouble.FreeMonad
    StuntDouble.Frontend.Http
    StuntDouble.Histogram
    StuntDouble.Histogram.SingleProducer
    StuntDouble.IO
    StuntDouble.Log
    StuntDouble.LogicalTime
    StuntDouble.Message
    StuntDouble.Metrics
    StuntDouble.Queue
    StuntDouble.Random
    StuntDouble.Reference
    StuntDouble.Supervisor
    StuntDouble.Time
    StuntDouble.Transport
    StuntDouble.Transport.Http
    StuntDouble.Transport.HttpSync
    StuntDouble.Transport.NamedPipe
    StuntDouble.Transport.NamedPipeCodec
    StuntDouble.Transport.Stm

  -- GHC boot library dependencies:
  -- (https://gitlab.haskell.org/ghc/ghc/-/blob/master/packages)
  build-depends:
    , base        ^>=4.14
    , containers
    , directory
    , filepath
    , mtl
    , stm
    , text
    , time
    , unix

  build-depends:
    , aeson
    , async
    , atomic-primops
    , brick
    , bytestring
    , direct-sqlite
    , ghc-prim
    , hashable
    , heaps
    , http-client
    , http-types
    , primitive
    , random
    , sqlite-simple
    , unboxed-ref
    , unordered-containers
    , vector
    , vty
    , wai
    , warp
    , word-wrap

  ghc-options:      -O2
  default-language: Haskell2010

test-suite test
  type:             exitcode-stdio-1.0
  hs-source-dirs:   test/
  main-is:          Main.hs
  build-depends:
    , async
    , base
    , containers
    , http-client
    , HUnit
    , QuickCheck
    , stunt-double
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , text

  other-modules:
    DisruptorTest
    StuntDouble.ActorMapTest
    StuntDouble.FrontendTest
    StuntDouble.Histogram.SingleProducerTest
    StuntDouble.HistogramTest
    StuntDouble.QueueTest
    StuntDouble.Transport.HttpTest
    StuntDouble.Transport.NamedPipeTest
    StuntDouble.Transport.StmTest
    TastyDiscover

  ghc-options:      -threaded -rtsopts -with-rtsopts=-N -fno-ignore-asserts
  default-language: Haskell2010

executable scheduler
  hs-source-dirs:   app/scheduler
  main-is:          Main.hs
  build-depends:
    , base
    , stunt-double

  ghc-options:      -threaded -rtsopts -with-rtsopts=-N
  default-language: Haskell2010

executable debugger
  hs-source-dirs:   app/debugger
  main-is:          Main.hs
  build-depends:
    , base
    , stunt-double

  ghc-options:      -threaded -rtsopts -with-rtsopts=-N
  default-language: Haskell2010

benchmark bench
  type:             exitcode-stdio-1.0
  hs-source-dirs:   bench/
  main-is:          Main.hs
  build-depends:
    , async
    , atomic-primops
    , base
    , http-client
    , stm
    , stunt-double
    , time

  default-language: Haskell2010

benchmark bench-http
  type:             exitcode-stdio-1.0
  hs-source-dirs:   bench/http
  main-is:          Main.hs
  build-depends:
    , async
    , atomic-primops
    , base
    , bytestring
    , http-client
    , http-types
    , network
    , stm
    , time
    , wai
    , warp

  default-language: Haskell2010

common bench-common
  hs-source-dirs: bench/disruptor
  build-depends:
    , async
    , base
    , time

  other-modules:    Common

  -- XXX: try with -fllvm
  -- Some of these options are taking from:
  --   https://wiki.haskell.org/Performance/GHC#Use_optimisation
  -- XXX: try with -fllvm

  -- To inspect core:
  -- -fforce-recomp
  -- -ddump-simpl
  -- -dsuppress-all
  -- -ddump-to-file
  ghc-options:
    -O2 -fproc-alignment=64 -fexcess-precision -fasm -optc-O3
    -optc-ffast-math -threaded -rtsopts -with-rtsopts=-N

  -- -threaded -eventlog -rtsopts -with-rtsopts=-N
  default-language: Haskell2010

common bench-common-sp
  import:         bench-common
  hs-source-dirs: bench/disruptor/SP

common bench-common-mp
  import:         bench-common
  hs-source-dirs: bench/disruptor/MP

benchmark bench-disruptor-singleops
  import:         bench-common
  main-is:        SingleOps.hs
  build-depends:
    , atomic-primops
    , stunt-double

  type:           exitcode-stdio-1.0

benchmark bench-disruptor-sp
  import:        bench-common-sp
  main-is:       Disruptor.hs
  build-depends: stunt-double
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-unboxed
  import:        bench-common-sp
  main-is:       DisruptorUnboxed.hs
  build-depends: stunt-double
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-chan
  import:        bench-common-sp
  main-is:       Chan.hs
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-tbqueue
  import:        bench-common-sp
  main-is:       TBQueue.hs
  build-depends: stm
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-chaselev-deque
  import:        bench-common-sp
  main-is:       ChaseLevDeque.hs
  build-depends: chaselev-deque
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-lockfree-queue
  import:        bench-common-sp
  main-is:       LockFreeQueue.hs
  build-depends: lockfree-queue
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-ringbuffer
  import:        bench-common-sp
  main-is:       RingBuffer.hs
  build-depends: ring-buffer, vector
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-sp-unagi-chan
  import:        bench-common-sp
  main-is:       UnagiChan.hs
  build-depends: unagi-chan
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-mp
  import:        bench-common-mp
  main-is:       Disruptor.hs
  build-depends: stunt-double
  type:          exitcode-stdio-1.0

benchmark bench-disruptor-mp-unagi-chan
  import:        bench-common-mp
  main-is:       UnagiChan.hs
  build-depends: unagi-chan
  type:          exitcode-stdio-1.0

executable readme-example
  hs-source-dirs:   app
  main-is:          ReadmeExample.hs
  build-depends:
    , async
    , base
    , stunt-double
  ghc-options:      -threaded -rtsopts -with-rtsopts=-N
  default-language: Haskell2010