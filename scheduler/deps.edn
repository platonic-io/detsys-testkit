{:paths ["src" "java/src"]
 :deps {ring/ring-core                      {:mvn/version "1.8.1"}
        ring/ring-devel                     {:mvn/version "1.8.1"}
        ring/ring-defaults                  {:mvn/version "0.3.2"}
        ring/ring-jetty-adapter             {:mvn/version "1.8.1"}
        clojure.java-time/clojure.java-time {:mvn/version "0.3.2"}
        clj-http/clj-http                   {:mvn/version "3.10.2"}
        clj-http-fake/clj-http-fake         {:mvn/version "1.0.3"}
        org.clojure/clojure                 {:mvn/version "1.10.2-alpha4"}
        org.clojure/data.generators         {:mvn/version "1.0.0"}
        shams/priority-queue                {:mvn/version "0.1.2"}
        seancorfield/next.jdbc              {:mvn/version "1.1.582"}
        org.xerial/sqlite-jdbc              {:mvn/version "3.32.3.2"}
        com.taoensso/timbre                 {:mvn/version "4.10.0"}
        metosin/jsonista                    {:mvn/version "0.2.7"}
        gnl/ghostwheel                      {:mvn/version "0.3.9"}}
 :aliases {:dev {:jvm-opts ["-Dghostwheel.enabled=true"]}
           :test {:extra-paths ["test"]
                  :extra-deps {com.cognitect/test-runner
                               {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                :sha "209b64504cb3bd3b99ecfec7937b358a879f55c1"}}
                  :main-opts ["-m" "cognitect.test-runner"]}
           :outdated {:extra-deps {olical/depot {:mvn/version "2.0.1"}}
                      :main-opts  ["-m" "depot.outdated.main" "-a" "outdated"]}
           :eastwood {:main-opts ["-m" "eastwood.lint" {:source-paths ["src"]}]
                      :extra-deps {jonase/eastwood {:mvn/version "RELEASE"}}}
           :clj-kondo {:main-opts ["-m" "clj-kondo.main" "--lint" "src" "test"]
                       :extra-deps {clj-kondo/clj-kondo {:mvn/version "2020.05.09"}}
                       :jvm-opts ["-Dclojure.main.report=stderr"]}
           :cljfmt {:main-opts ["-m" "cljfmt.main" "fix" "--indents" ".cljfmt.edn"]
                    :extra-deps {cljfmt/cljfmt {:mvn/version "0.6.8"}}}
           :uberjar {:extra-deps {uberdeps/uberdeps {:mvn/version "0.1.11"}}
                     :main-opts  ["-m" "uberdeps.uberjar"
                                  "--target" "target/scheduler.jar"]}
           :native-image {:main-opts ["-m clj.native-image scheduler.core"
                                      "--verbose"
                                      "--allow-incomplete-classpath"
                                      "--no-fallback"
                                      "--report-unsupported-elements-at-runtime"
                                      "--initialize-at-build-time"
                                      "--initialize-at-build-time=org.sqlite.JDBC"
                                      "--initialize-at-build-time=org.sqlite.core.DB$ProgressObserver"
                                      "--initialize-at-build-time=org.sqlite.core.DB"
                                      "--initialize-at-build-time=org.sqlite.core.NativeDB"
                                      "--initialize-at-build-time=org.sqlite.ProgressHandler"
                                      "--initialize-at-build-time=org.sqlite.Function"
                                      "--initialize-at-build-time=org.sqlite.Function$Aggregate"
                                      "--initialize-at-build-time=org.sqlite.Function$Window"
                                      "-H:IncludeResources=db/.*|static/.*|templates/.*|.*.yml|.*.xml|.*/org/sqlite/.*|org/sqlite/.*"
                                      "-H:JNIConfigurationFiles=native-image/jni-config.json"
                                      "-H:EnableURLProtocols=http,https"
                                      "-H:Path=target/"
                                      "-H:Name=scheduler"
                                      "-H:+ReportExceptionStackTraces"]
                          :jvm-opts ["-Dclojure.compiler.direct-linking=true"
                                     "-Dclojure.spec.skip-macros=true"
                                     "-Dfile.encoding=UTF-8"]
                          :extra-deps
                          {clj.native-image/clj.native-image
                           {:git/url "https://github.com/taylorwood/clj.native-image.git"
                            :sha "f3e40672d5c543b80a2019c1f07b2d3fe785962c"}}}}
 :mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}
             "clojars" {:url "https://repo.clojars.org/"}}}
